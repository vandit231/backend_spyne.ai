{
    "swagger": "2.0",
    "info": {
      "title": "Car Management API",
      "version": "1.0.0",
      "description": "API documentation for Car Management Application"
    },
    "host": "your-backend-domain.com",
    "basePath": "/api",
    "schemes": ["http", "https"],
    "paths": {
      "/auth/signup": {
        "post": {
          "summary": "Register a new user",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": { "$ref": "#/definitions/User" }
            }
          ],
          "responses": {
            "201": { "description": "User created successfully" },
            "400": { "description": "User already exists" },
            "500": { "description": "Server error" }
          }
        }
      },
      "/auth/login": {
        "post": {
          "summary": "Authenticate user and get token",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": { "$ref": "#/definitions/Login" }
            }
          ],
          "responses": {
            "200": { "description": "Login successful" },
            "400": { "description": "Invalid credentials" },
            "500": { "description": "Server error" }
          }
        }
      },
      "/cars": {
        "post": {
          "summary": "Create a new car",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "description": "Bearer token"
            },
            {
              "name": "images",
              "in": "formData",
              "type": "file",
              "description": "Up to 10 images of the car",
              "required": false,
              "collectionFormat": "multi"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": { "$ref": "#/definitions/Car" }
            }
          ],
          "responses": {
            "201": { "description": "Car created successfully" },
            "400": { "description": "Bad request" },
            "401": { "description": "Unauthorized" },
            "500": { "description": "Server error" }
          }
        },
        "get": {
          "summary": "List all cars for the authenticated user",
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "description": "Bearer token"
            },
            {
              "name": "search",
              "in": "query",
              "required": false,
              "type": "string",
              "description": "Search keyword"
            }
          ],
          "responses": {
            "200": { "description": "List of cars" },
            "401": { "description": "Unauthorized" },
            "500": { "description": "Server error" }
          }
        }
      },
      "/cars/{id}": {
        "get": {
          "summary": "Get details of a specific car",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Car ID"
            },
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "description": "Bearer token"
            }
          ],
          "responses": {
            "200": { "description": "Car details" },
            "404": { "description": "Car not found" },
            "401": { "description": "Unauthorized" },
            "500": { "description": "Server error" }
          }
        },
        "put": {
          "summary": "Update a specific car",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Car ID"
            },
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "description": "Bearer token"
            },
            {
              "name": "images",
              "in": "formData",
              "type": "file",
              "description": "Up to 10 images of the car",
              "required": false,
              "collectionFormat": "multi"
            },
            {
              "name": "body",
              "in": "body",
              "required": false,
              "schema": { "$ref": "#/definitions/CarUpdate" }
            }
          ],
          "responses": {
            "200": { "description": "Car updated successfully" },
            "404": { "description": "Car not found" },
            "401": { "description": "Unauthorized" },
            "500": { "description": "Server error" }
          }
        },
        "delete": {
          "summary": "Delete a specific car",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Car ID"
            },
            {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "description": "Bearer token"
            }
          ],
          "responses": {
            "200": { "description": "Car deleted successfully" },
            "404": { "description": "Car not found" },
            "401": { "description": "Unauthorized" },
            "500": { "description": "Server error" }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": { "type": "string" },
          "email":    { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "Login": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email":    { "type": "string" },
          "password": { "type": "string" }
        }
      },
      "Car": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title":       { "type": "string" },
          "description": { "type": "string" },
          "tags":        { "type": "string", "description": "Comma-separated tags" },
          "car_type":    { "type": "string" },
          "company":     { "type": "string" },
          "dealer":      { "type": "string" }
        }
      },
      "CarUpdate": {
        "type": "object",
        "properties": {
          "title":       { "type": "string" },
          "description": { "type": "string" },
          "tags":        { "type": "string", "description": "Comma-separated tags" },
          "car_type":    { "type": "string" },
          "company":     { "type": "string" },
          "dealer":      { "type": "string" }
        }
      }
    },
    "securityDefinitions": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "JWT Authorization header using the Bearer scheme. Example: 'Authorization: Bearer {token}'"
      }
    }
  }
  